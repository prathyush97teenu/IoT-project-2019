rom __future__ import division
import RPi.GPIO as GPIO
import spidev
import requests
import urllib2
import urllib
import json
import time
import serial
TRIG = 5 #Associate pin 5 to TRIG
ECHO = 6 #Associate pin 6 to ECHO
GPIO.setmode(GPIO.BCM) #Set GPIO pin numbering
GPIO.setup(TRIG,GPIO.OUT) #Set pin as GPIO out
GPIO.setup(ECHO,GPIO.IN) #Set pin as GPIO in
spi=spidev.SpiDev()
print(spi)
spi.open(0,0)
def convert(x):
 x=x/1023
 x=x*100
 x=format(x,'.2f')
 return x
while True:
 GPIO.output(TRIG, False) #Set TRIG as LOW 

 print "Waitng For Sensor To Settle"
 time.sleep(3) #Delay of 2 seconds
 GPIO.output(TRIG, True) #Set TRIG as HIGH
 time.sleep(0.00001) #Delay of 0.00001 seconds
 GPIO.output(TRIG, False) #Set TRIG as LOW
 while GPIO.input(ECHO)==0: #Check whether the ECHO is LOW
 pulse_start = time.time() #Saves the last known time of LOW pulse
 while GPIO.input(ECHO)==1: #Check whether the ECHO is HIGH
 pulse_end = time.time() #Saves the last known time of HIGH pulse
 pulse_duration = pulse_end - pulse_start #Get pulse duration to a variable
 distance = pulse_duration * 17150 #Multiply pulse duration by 17150 to get distance
 distance = round(distance, 2) #Round to two decimal points
 if distance > 2 and distance < 25: #Check whether the distance is within range
 #print "Distance:",distance - 0.5,"cm" #Print distance with 0.5 cm calibration
 distance=distance-0.5
 distance=distance/22
 distance=distance*100
 distance=100-distance
 distance=format(distance,'.2f')
 print (distance)
 else:
 print "Out Of Range" #display out of range 